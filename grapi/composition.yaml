apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: grapi.gsf.grpl.io
  labels:
    crossplane.io/xrd: compositegrappleapis.gsf.grpl.io
    provider: grapi
spec:
  # writeConnectionSecretsToNamespace: grpl-system
  compositeTypeRef:
    apiVersion: gsf.grpl.io/v1alpha1
    kind: CompositeGrappleApi
  resources:
    # - base:
    #     apiVersion: kubernetes.crossplane.io/v1alpha1
    #     kind: Object
    #     spec:
    #       forProvider:
    #         manifest:
    #           apiVersion: v1
    #           kind: Pod
    #           metadata:
    #             name: mypod
    #             namespace: grpl-test
    #           spec:
    #             containers:
    #             - image: nginx:latest
    #               name: mypod
    #       writeConnectionSecretsToRef: 
    #         namespace: grpl-test
    #         name: mypod-secret
    #       providerConfigRef: 
    #         # name: providerconfigs.kubernetes.crossplane.io/kubernetes-provider
    #         name: kubernetes-provider
    #   patches:
    #     - fromFieldPath: metadata.namespace
    #       toFieldPath: metadata.namespace
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations: 
            crossplane.io/external-name: # patched
        spec:
          forProvider:
            chart:
              name: grapi
              repository: oci://public.ecr.aws/p7h7z5g3
              version: 0.1.0
            namespace: # patched
            values:
              name: # patched
              grapiversion: "0.0.1"
              clusterdomain: ""
              ssl: false
              sslissuer: letsencrypt-prod-cloud20x
              buildimages: false
              buildimagecache: true
              runimages: true
              deployimages: false
              imagetag: ""
              beimage: patrickriegler/loopback
              beimagetag: "v0.48"
              rediscache: false
              translations: false
              apiregistry: false
              graphql: false
              monitoring: false
              discoveredrepos: true
              externalsecrets: []
              datasources: []
              discoveries: []
              models: []
              relations: []
              serviceproviders: []
              openapis: []
              restcruds: []
              repositories: []
              controllers: []
            # set: 
            #   - name: externalDatabase.host
            #     valueFrom: 
            #       secretKeyRef: 
            #         name: 
            #         namespace: crossplane-system
            #         key: endpoint
            #   - name: externalDatabase.user
            #     valueFrom: 
            #       secretKeyRef: 
            #         name: 
            #         namespace: crossplane-system
            #         key: username
            #   - name: externalDatabase.password
            #     valueFrom: 
            #       secretKeyRef: 
            #         name: 
            #         namespace: crossplane-system
            #         key: password
          writeConnectionSecretsToRef: 
            namespace: grpl-test
            name: myrelease-secret
          providerConfigRef: 
            # name: providerconfigs.helm.crossplane.io/helm-provider-config
            name: helm-provider-config
      patches:
        - fromFieldPath: spec.claimRef.namespace
          toFieldPath: spec.forProvider.namespace
          policy:
            fromFieldPath: Required
        - fromFieldPath: spec.claimRef.name
          toFieldPath: metadata.annotations[crossplane.io/external-name]
          policy:
            fromFieldPath: Required
        - fromFieldPath: spec.claimRef.name
          toFieldPath: spec.forProvider.values.name
          policy:
            fromFieldPath: Required
        - fromFieldPath: spec.claimRef.grapiversion
          toFieldPath: spec.forProvider.values.grapiversion
        - fromFieldPath: spec.claimRef.clusterdomain
          toFieldPath: spec.forProvider.values.clusterdomain
        - fromFieldPath: spec.claimRef.ssl
          toFieldPath: spec.forProvider.values.ssl
        - fromFieldPath: spec.claimRef.sslissuer
          toFieldPath: spec.forProvider.values.sslissuer
        - fromFieldPath: spec.claimRef.sslissuer
          toFieldPath: spec.forProvider.values.sslissuer
        - fromFieldPath: spec.claimRef.buildimages
          toFieldPath: spec.forProvider.values.buildimages
          policy:
            fromFieldPath: Required
        - fromFieldPath: spec.claimRef.buildimagecache
          toFieldPath: spec.forProvider.values.buildimagecache
        - fromFieldPath: spec.claimRef.runimages
          toFieldPath: spec.forProvider.values.runimages
        - fromFieldPath: spec.claimRef.deployimages
          toFieldPath: spec.forProvider.values.deployimages
        - fromFieldPath: spec.claimRef.imagetag
          toFieldPath: spec.forProvider.values.imagetag
        - fromFieldPath: spec.claimRef.beimage
          toFieldPath: spec.forProvider.values.beimage
        - fromFieldPath: spec.claimRef.beimagetag
          toFieldPath: spec.forProvider.values.beimagetag
        - fromFieldPath: spec.claimRef.rediscache
          toFieldPath: spec.forProvider.values.rediscache
        - fromFieldPath: spec.claimRef.translations
          toFieldPath: spec.forProvider.values.translations
        - fromFieldPath: spec.claimRef.apiregistry
          toFieldPath: spec.forProvider.values.apiregistry
        - fromFieldPath: spec.claimRef.graphql
          toFieldPath: spec.forProvider.values.graphql
        - fromFieldPath: spec.claimRef.monitoring
          toFieldPath: spec.forProvider.values.monitoring
        - fromFieldPath: spec.claimRef.discoveredrepos
          toFieldPath: spec.forProvider.values.discoveredrepos
        - fromFieldPath: spec.claimRef.externalsecrets
          toFieldPath: spec.forProvider.values.externalsecrets

        - fromFieldPath: spec.claimRef.datasources
          toFieldPath: spec.forProvider.values.datasources
        - fromFieldPath: spec.claimRef.discoveries
          toFieldPath: spec.forProvider.values.discoveries
        - fromFieldPath: spec.claimRef.models
          toFieldPath: spec.forProvider.values.models
        - fromFieldPath: spec.claimRef.relations
          toFieldPath: spec.forProvider.values.relations
        - fromFieldPath: spec.claimRef.serviceproviders
          toFieldPath: spec.forProvider.values.serviceproviders
        - fromFieldPath: spec.claimRef.openapis
          toFieldPath: spec.forProvider.values.openapis
        - fromFieldPath: spec.claimRef.restcruds
          toFieldPath: spec.forProvider.values.restcruds
        - fromFieldPath: spec.claimRef.repositories
          toFieldPath: spec.forProvider.values.repositories
        - fromFieldPath: spec.claimRef.controllers
          toFieldPath: spec.forProvider.values.controllers
